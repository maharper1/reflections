How did viewing a diff between two versions of a file help you see the bug that was introduced?
  Limiting the amount of text that needed to be eyeballed was extremely helpful.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
 Much easier to back out bad changes.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?
  More logical.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
  For code, you need a consistent version of the whole system.

How can you use the commands git log and git diff to view the history of files?
  git log shows the summary of changes, git diff can be used to show the details between two commits.

How might using version control make you more confident to make changes that could break something?
  Knowing that you can get back to a working version means you can't really break anything.

Now that you have your workspace set up, what do you want to try using Git for?
  Version control for my Udacity projects.